%{
	#include <haka/error.h>

	#include <stdlib.h>

	typedef const char *temporary_string;

	/* GCC 4.7 has a problem with some code generated by SWIG and trigger
	 * a warning. We need to disable it in order to compile properly. */
	#pragma GCC diagnostic ignored "-Warray-bounds"

	#undef SWIG_fail
	#undef SWIG_fail_arg
	#undef SWIG_check_num_args

	#define SWIG_fail {SWIG_arg=-1;goto fail;}
	#define SWIG_fail_arg(func_name,argnum,type) \
	  {lua_pushfstring(L,"Error in %s (arg %d), expected '%s' got '%s'",\
	  func_name,argnum,type,SWIG_Lua_typename(L,argnum));\
	  SWIG_arg=-1;goto fail;}
	#define SWIG_check_num_args(func_name,a,b) \
	  if (lua_gettop(L)<a || lua_gettop(L)>b) \
	  {lua_pushfstring(L,"Error in %s expected %d..%d args, got %d",func_name,a,b,lua_gettop(L));\
	  SWIG_arg=-1;goto fail;}
	#define SWIG_execfail {SWIG_arg=-2;goto fail;}
%}

%exception %{
	const wchar_t *error;
	$action
	if ((error = clear_error())) {
		int size;
		char *errormb;

		size = wcstombs(NULL, error, 0);
		if (size == (size_t)-1) {
			lua_pushstring(L, "unknown error");
			SWIG_execfail;
		}

		errormb = malloc(size+1);
		if (!errormb) {
			lua_pushstring(L, "memory error");
			SWIG_execfail;
		}

		wcstombs(errormb, error, size+1);
		lua_pushstring(L, errormb);
		free(errormb);

		SWIG_execfail;
	}
%}

%typemap(out) temporary_string {
	lua_pushstring(L, (const char *)$result); SWIG_arg++;
	free((void*)$result);
}

%include "typemaps.i"

%apply bool *OUTPUT { bool *OUTPUT1 };
%apply bool *OUTPUT { bool *OUTPUT2 };
%apply bool *OUTPUT { bool *OUTPUT3 };
%apply bool *OUTPUT { bool *OUTPUT4 };
%apply bool *OUTPUT { bool *OUTPUT5 };
